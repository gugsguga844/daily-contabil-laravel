name: Laravel CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest
    env:
      APP_ENV: testing
      DB_CONNECTION: sqlite
      DB_DATABASE: ':memory:'

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'

      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install NPM Dependencies
        run: npm install

      - name: Build Frontend Assets
        run: npm run build

      - name: Prepare Laravel Application
        run: |
          cp .env.example .env
          php artisan key:generate

      - name: Run Pint
        run: ./vendor/bin/pint --test

      - name: Run ESLint
        run: npx eslint . --ext .js,.ts,.vue

      - name: Run Tests
        run: php artisan test

  deploy:
    needs: laravel-tests
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Deploy to production
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /var/www/laravel
            echo "Starting deployment..."
            git config --global --add safe.directory /var/www/laravel
            git reset --hard origin/main
            git pull origin main
            export COMPOSER_ALLOW_SUPERUSER=1
            composer install --no-dev --optimize-autoloader
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm use --lts
            npm install
            npm run build
            echo "Dependencies installed successfully. Running migrations..."
            php artisan migrate --force
            php artisan optimize:clear
            echo "Deployment completed successfully."
            
          
